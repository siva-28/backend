{
  "_args": [
    [
      {
        "raw": "http-status@^1.1.2",
        "scope": null,
        "escapedName": "http-status",
        "name": "http-status",
        "rawSpec": "^1.1.2",
        "spec": ">=1.1.2 <2.0.0",
        "type": "range"
      },
      "/home/siva-m/k/ceg/server/ceg-server/node_modules/strong-error-handler"
    ]
  ],
  "_from": "http-status@^1.1.2",
  "_hasShrinkwrap": false,
  "_id": "http-status@1.3.1",
  "_location": "/http-status",
  "_nodeVersion": "10.12.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/http-status_1.3.1_1542146536476_0.641850058012589"
  },
  "_npmUser": {
    "name": "david",
    "email": "david@adaltas.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "http-status@^1.1.2",
    "scope": null,
    "escapedName": "http-status",
    "name": "http-status",
    "rawSpec": "^1.1.2",
    "spec": ">=1.1.2 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/strong-error-handler"
  ],
  "_resolved": "https://registry.npmjs.org/http-status/-/http-status-1.3.1.tgz",
  "_shasum": "340a500e778a3091d18fda026df80f104a02dde7",
  "_shrinkwrap": null,
  "_spec": "http-status@^1.1.2",
  "_where": "/home/siva-m/k/ceg/server/ceg-server/node_modules/strong-error-handler",
  "author": {
    "name": "David Worms",
    "email": "david@adaltas.com"
  },
  "bugs": {
    "url": "http://github.com/adaltas/node-http-status/issues",
    "email": "open@adaltas.com"
  },
  "contributors": [
    {
      "name": "David Worms",
      "email": "david@adaltas.com"
    },
    {
      "name": "Daniel Gasienica",
      "email": "daniel@gasienica.ch"
    }
  ],
  "dependencies": {},
  "description": "Interact with HTTP status code",
  "devDependencies": {
    "@types/mocha": "^5.2.5",
    "@types/node": "^10.12.6",
    "@types/should": "^13.0.0",
    "coffeescript": "2.3.0",
    "mocha": "5.1.1",
    "should": "13.2.1",
    "ts-node": "^7.0.1",
    "typescript": "^3.1.6"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-PcI9NUm6EUOhHlaxYABCqDQQWS7IgoBZ/PmPkhuzj+oR01ffjv3EJfKnnWJZcUhILtUh6/NdJi1Zs/mIr6v8DA==",
    "shasum": "340a500e778a3091d18fda026df80f104a02dde7",
    "tarball": "https://registry.npmjs.org/http-status/-/http-status-1.3.1.tgz",
    "fileCount": 10,
    "unpackedSize": 54660,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJb60noCRA9TVsSAnZWagAAdxQP/0uT83KBHcZA4h2jGFMu\nR6rQ/lXdwIiDaaFQsxDVt3gHYXvWzIxrnXVdvYg66yMCnD2Lm0Jhl4adJzfM\nPLD3WHQpsltJIPjr5ZwU9xzmMU5mxM7OcbdXJwKrRqZyUxvaUtqXl0g3OWds\ns9guex95z3/iNfpbO/w+Ur9pBsFEWxna2uJB/wr31S4XYiQKlM4/agMm4ak2\nJNpYsYwgVkgJsnNDbIbbFhRLQZVth1Fkofarx3++N3bIzaOwCaGGQRrADI5F\ny8bg284ba47vF/e8wrsGT6xa6SppM+Lqb6gPVCLMj6JZC5EyX5w3So8ayjTp\nuCURmRVLT1uk0H2skxaFSAAKZBAJZhKKZ7hxfhlkIDVU3hB7pWXPMnPPb0pd\nhqVkYp0XzNza5r6GzOAkNnsswl0TDWnQlNhpQR3/qTn9E/U7fqCW8nM0WVJE\n+rLn+zcr6In5b12Ct1RLJyrd0esAvFYJf7gnz0PAVhVDsrogmAuox0EBJ5qr\nHFFiLj7CqkSwX3GMjOg8a+dqSyq3TwRolamLNlfkmdD0FwYJoq0fd9U+hh3U\nQsN+JqO9EoBjvQ37SYAcaVS7UqhvIW9BpzYwDXZJfbsWcS7eQJQaxnjhO3YJ\nKVMaBNHbImuEGRXrfVM3WEBlL9SlSIl6WFmkPki9VCWYtAdDsJhUdbW47b9J\nLeF/\r\n=kjeu\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "gitHead": "852de797bf859c7b4b31381150d92945961c29f1",
  "homepage": "https://github.com/adaltas/node-http-status",
  "keywords": [
    "http",
    "express",
    "connect"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "david",
      "email": "david@adaltas.com"
    }
  ],
  "name": "http-status",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://secure.travis-ci.org/adaltas/node-http-status.png)](http://travis-ci.org/adaltas/node-http-status)\n\n# HTTP Status code for Node\n\nUtility to interact with HTTP status code.\n\n## Usage\n\nOnce you require this module, you may call it with either an HTTP code or a message name. With an HTTP code, you will get the message name while with a message name you will get an HTTP code. Simple.\n\nAdditionally, HTTP code names and messages are respectively accessible with the name \"{code}_NAME\" and \"{code}_MESSAGE\".\n\nExtra status code are also made available. They are grouped by categories. Specific properties are exported by `http-status` under the property `extra` followed by the category name. Also, extra code are merge with regular status code and made available as modules available inside `http-status/lib/{category}`. Available categories are:\n\n- `unofficial`   \n  This represent a list of codes which are not specified by any standard.\n- `iis`   \n  Microsoft's Internet Information Services (IIS) web server expands the 4xx error space to signal errors with the client's request.\n- `nginx`   \n  The NGINX web server software expands the 4xx error space to signal issues with the client's request.\n- `cloudflare`   \n  Cloudflare's reverse proxy service expands the 5xx series of errors space to signal issues with the origin server.\n\n## API\n\nThis module is very simple. A documentation would be more complicate than reading the [original code](./src/index.litcoffee).\n\n### API sample\n\n```javascript\nconst status = require('http-status');\n// Print \"Internal Server Error\"\nconsole.info(status[500]);\n// Print 500\nconsole.info(status.INTERNAL_SERVER_ERROR);\n// Print \"INTERNAL_SERVER_ERROR\"\nconsole.info(status['500_CODE']);\n// Print \"A generic error message, given when an unexpected condition was encountered and no more specific message is suitable.\"\nconsole.info(status['500_MESSAGE']);\n```\n\n### Extra sample\n\n```javascript\n// Accessing property from the NGINX category\nconst status = require('http-status');\nconsole.info(status.extra.nginx.NO_RESPONSE)\n// Accessing default HTTP status merged with NGINX status\nconst status = require('http-status/lib/nginx');\nconsole.info(status.IM_A_TEAPOT);\nconsole.info(status.NO_RESPONSE)\n```\n\n### Express sample\n\n```javascript\nconst express = require('express'),\n      redis = require('redis'),\n      status = require('http-status');\n// New Express HTTP server\nconst app = express.createServer();\n// Regster a route\napp.get('/', function (req, res) {\n  const client = redis.createClient();\n  client.ping(function (err, msg) {\n    if (err) {\n      return res.send(status.INTERNAL_SERVER_ERROR);\n    }\n    res.send(msg, status.OK);\n  });\n});\n// Start the HTTP server\napp.listen(3000);\n```\n\n## Contributors\n\n- David Worms: <https://github.com/wdavidw>\n- Daniel Gasienica: <https://github.com/gasi>\n- Rodrigo: <rfsbraz@gmail.com>\n- Paul Vollmer: <paul.vollmer@fh-potsdam.de>\n\nThis package is developed by [Adaltas](http://www.adaltas.com).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/adaltas/node-http-status.git"
  },
  "scripts": {
    "coffee": "coffee -b -o lib src",
    "major": "npm version major -m 'Bump to version %s'",
    "minor": "npm version minor -m 'Bump to version %s'",
    "patch": "npm version patch -m 'Bump to version %s'",
    "postversion": "git push origin master && git push origin master --tags && npm publish",
    "pretest": "coffee -b -o lib src && cp src/index.d.ts lib",
    "preversion": "grep '## Trunk' CHANGELOG.md && npm test",
    "test": "mocha test/**/*.coffee",
    "version": "version=`grep '^  \"version\": ' package.json | sed 's/.*\"\\([0-9\\.]*\\)\".*/\\1/'` && sed -i \"s/## Trunk/## Version $version/\" CHANGELOG.md && git add CHANGELOG.md"
  },
  "types": "lib/index.d.ts",
  "version": "1.3.1"
}
